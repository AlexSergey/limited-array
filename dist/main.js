/*!
 * banner:
 * limited-array: 1.0.0
 * Aleksandrov Sergey <gooddev.sergey@gmail.com> (https://github.com/AlexSergey/limited-array)
 * Array with a limit to size. It's very similar to the queue
 * ISC
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.LimitedArray=e():t.LimitedArray=e()}(this,function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="/",r(r.s=0)}([function(t,e,r){"use strict";r.r(e),r.d(e,"default",function(){return i});class i{constructor(t){this.limit=t&&"number"==typeof t.limit?Math.abs(t.limit):10,this.data=[]}setLimit(t){return this.limit=t&&"number"==typeof t?Math.abs(t):this.limit,this.checkLimit()}checkLimit(){let t=this.data.length-this.limit;return!(t<=0)&&(Array(t).fill(0).forEach(()=>{this.data.shift()}),!0)}add(t){return this.data.push(t),this.checkLimit()}splice(t,e){this.data.splice(t,e)}getData(){return this.data.map(t=>t)}at(t){return this.data[t]}getLength(){return this.data.length}reset(){this.data=[]}}}])});